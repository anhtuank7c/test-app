// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={true}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="login"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "padding": 16,
            }
          }
        >
          <Text
            style={
              Object {
                "alignSelf": "center",
                "fontSize": 27,
                "fontWeight": "bold",
                "paddingVertical": 68,
                "textTransform": "uppercase",
              }
            }
            testID="header"
          >
            Login
          </Text>
          <TextInput
            autoCapitalize="none"
            onChangeText={[Function]}
            placeholder="username"
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 10,
                "height": 60,
                "paddingHorizontal": 16,
                "width": "100%",
              }
            }
            testID="username"
            value=""
          />
          <View
            style={
              Object {
                "height": 16,
              }
            }
          />
          <TextInput
            onChangeText={[Function]}
            placeholder="******"
            secureTextEntry={true}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 10,
                "height": 60,
                "paddingHorizontal": 16,
                "width": "100%",
              }
            }
            testID="password"
            value=""
          />
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "green",
                "borderRadius": 10,
                "marginTop": 26,
                "opacity": 1,
                "paddingVertical": 16,
              }
            }
            testID="loginButton"
          >
            <Text
              style={
                Object {
                  "alignSelf": "center",
                  "color": "#fff",
                  "fontSize": 17,
                  "letterSpacing": 0.2,
                }
              }
            >
              Login
            </Text>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
